// Code generated by cmd/codegen from https://github.com/AllenDang/cimgui-go.
// DO NOT EDIT.

package imgui

// #include <stdlib.h>
// #include <memory.h>
// #include "extra_types.h"
// #include "cimgui_wrapper.h"
// #include "cimgui_callbacks.h"
import "C"

const mapName_DrawCallback = "DrawCallback"

type DrawCallback func(parent_list *DrawList, cmd *DrawCmd)

// export callbackDrawCallback
func callbackDrawCallback(parent_list *C.ImDrawList, cmd *C.ImDrawCmd) {
	callbackInterface, ok := callbackMap[mapName_DrawCallback]
	if !ok {
		panic("cimgui-go fatal error: Callback DrawCallback not found")
	}

	callbackFn, ok := callbackInterface.(DrawCallback)
	if !ok {
		panic("cimgui-go fatal error: Callback DrawCallback is not of proper type")
	}

	parent_listArg := newDrawListFromC(parent_list)
	cmdArg := newDrawCmdFromC(cmd)

	callbackFn(parent_listArg, cmdArg)
}

func setDrawCallbackCallback(callback DrawCallback) {
	callbackMap[mapName_DrawCallback] = callback
}

const mapName_ContextHookCallback = "ContextHookCallback"

type ContextHookCallback func(ctx *Context, hook *ContextHook)

// export callbackContextHookCallback
func callbackContextHookCallback(ctx *C.ImGuiContext, hook *C.ImGuiContextHook) {
	callbackInterface, ok := callbackMap[mapName_ContextHookCallback]
	if !ok {
		panic("cimgui-go fatal error: Callback ContextHookCallback not found")
	}

	callbackFn, ok := callbackInterface.(ContextHookCallback)
	if !ok {
		panic("cimgui-go fatal error: Callback ContextHookCallback is not of proper type")
	}

	ctxArg := newContextFromC(ctx)
	hookArg := newContextHookFromC(hook)

	callbackFn(ctxArg, hookArg)
}

func setContextHookCallbackCallback(callback ContextHookCallback) {
	callbackMap[mapName_ContextHookCallback] = callback
}

const mapName_InputTextCallback = "InputTextCallback"

type InputTextCallback func(data *InputTextCallbackData) int32

// export callbackInputTextCallback
func callbackInputTextCallback(data *C.ImGuiInputTextCallbackData) C.int {
	callbackInterface, ok := callbackMap[mapName_InputTextCallback]
	if !ok {
		panic("cimgui-go fatal error: Callback InputTextCallback not found")
	}

	callbackFn, ok := callbackInterface.(InputTextCallback)
	if !ok {
		panic("cimgui-go fatal error: Callback InputTextCallback is not of proper type")
	}

	dataArg := newInputTextCallbackDataFromC(data)

	callbackFn(dataArg)
}

func setInputTextCallbackCallback(callback InputTextCallback) {
	callbackMap[mapName_InputTextCallback] = callback
}

const mapName_SizeCallback = "SizeCallback"

type SizeCallback func(data *SizeCallbackData)

// export callbackSizeCallback
func callbackSizeCallback(data *C.ImGuiSizeCallbackData) {
	callbackInterface, ok := callbackMap[mapName_SizeCallback]
	if !ok {
		panic("cimgui-go fatal error: Callback SizeCallback not found")
	}

	callbackFn, ok := callbackInterface.(SizeCallback)
	if !ok {
		panic("cimgui-go fatal error: Callback SizeCallback is not of proper type")
	}

	dataArg := newSizeCallbackDataFromC(data)

	callbackFn(dataArg)
}

func setSizeCallbackCallback(callback SizeCallback) {
	callbackMap[mapName_SizeCallback] = callback
}
