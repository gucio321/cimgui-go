// Code generated by cmd/codegen from https://github.com/AllenDang/cimgui-go.
// DO NOT EDIT.

#pragma once

#include "wrapper.h"

#ifdef __cplusplus
extern "C" {
#endif

extern void wrap_AltColor_SetValue(AltColor *AltColorPtr, ImColor v);
extern ImColor wrap_AltColor_GetValue(AltColor *self);
extern void wrap_Angle_SetValue(Angle *AnglePtr, float v);
extern float wrap_Angle_GetValue(Angle *self);
extern void wrap_AngleMax_SetValue(AngleMax *AngleMaxPtr, float v);
extern float wrap_AngleMax_GetValue(AngleMax *self);
extern void wrap_AngleMin_SetValue(AngleMin *AngleMinPtr, float v);
extern float wrap_AngleMin_GetValue(AngleMin *self);
extern void wrap_BgColor_SetValue(BgColor *BgColorPtr, ImColor v);
extern ImColor wrap_BgColor_GetValue(BgColor *self);
extern void wrap_Color_SetValue(Color *ColorPtr, ImColor v);
extern ImColor wrap_Color_GetValue(Color *self);
extern void wrap_Delta_SetValue(Delta *DeltaPtr, float v);
extern float wrap_Delta_GetValue(Delta *self);
extern void wrap_Dots_SetValue(Dots *DotsPtr, int v);
extern int wrap_Dots_GetValue(Dots *self);
extern void wrap_FloatPtr_SetValue(FloatPtr *FloatPtrPtr, float_ptr v);
extern float_ptr wrap_FloatPtr_GetValue(FloatPtr *self);
extern void wrap_MiddleDots_SetValue(MiddleDots *MiddleDotsPtr, int v);
extern int wrap_MiddleDots_GetValue(MiddleDots *self);
extern void wrap_MinThickness_SetValue(MinThickness *MinThicknessPtr, float v);
extern float wrap_MinThickness_GetValue(MinThickness *self);
extern void wrap_Mode_SetValue(Mode *ModePtr, int v);
extern int wrap_Mode_GetValue(Mode *self);
extern void wrap_Radius_SetValue(Radius *RadiusPtr, float v);
extern float wrap_Radius_GetValue(Radius *self);
extern void wrap_Reverse_SetValue(Reverse *ReversePtr, bool v);
extern bool wrap_Reverse_GetValue(Reverse *self);
extern void wrap_Speed_SetValue(Speed *SpeedPtr, float v);
extern float wrap_Speed_GetValue(Speed *self);
extern void wrap_SpinnerConfig_SetM_SpinnerType(SpinnerConfig *SpinnerConfigPtr, SpinnerTypeT v);
extern SpinnerTypeT wrap_SpinnerConfig_GetM_SpinnerType(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Radius(SpinnerConfig *SpinnerConfigPtr, float v);
extern float wrap_SpinnerConfig_GetM_Radius(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Speed(SpinnerConfig *SpinnerConfigPtr, float v);
extern float wrap_SpinnerConfig_GetM_Speed(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Thickness(SpinnerConfig *SpinnerConfigPtr, float v);
extern float wrap_SpinnerConfig_GetM_Thickness(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Color(SpinnerConfig *SpinnerConfigPtr, ImColor v);
extern ImColor wrap_SpinnerConfig_GetM_Color(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_BgColor(SpinnerConfig *SpinnerConfigPtr, ImColor v);
extern ImColor wrap_SpinnerConfig_GetM_BgColor(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_AltColor(SpinnerConfig *SpinnerConfigPtr, ImColor v);
extern ImColor wrap_SpinnerConfig_GetM_AltColor(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Angle(SpinnerConfig *SpinnerConfigPtr, float v);
extern float wrap_SpinnerConfig_GetM_Angle(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_AngleMin(SpinnerConfig *SpinnerConfigPtr, float v);
extern float wrap_SpinnerConfig_GetM_AngleMin(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_AngleMax(SpinnerConfig *SpinnerConfigPtr, float v);
extern float wrap_SpinnerConfig_GetM_AngleMax(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_FloatPtr(SpinnerConfig *SpinnerConfigPtr, float_ptr v);
extern float_ptr wrap_SpinnerConfig_GetM_FloatPtr(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Dots(SpinnerConfig *SpinnerConfigPtr, int v);
extern int wrap_SpinnerConfig_GetM_Dots(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_MiddleDots(SpinnerConfig *SpinnerConfigPtr, int v);
extern int wrap_SpinnerConfig_GetM_MiddleDots(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_MinThickness(SpinnerConfig *SpinnerConfigPtr, float v);
extern float wrap_SpinnerConfig_GetM_MinThickness(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Reverse(SpinnerConfig *SpinnerConfigPtr, bool v);
extern bool wrap_SpinnerConfig_GetM_Reverse(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Delta(SpinnerConfig *SpinnerConfigPtr, float v);
extern float wrap_SpinnerConfig_GetM_Delta(SpinnerConfig *self);
extern void wrap_SpinnerConfig_SetM_Mode(SpinnerConfig *SpinnerConfigPtr, int v);
extern int wrap_SpinnerConfig_GetM_Mode(SpinnerConfig *self);
extern void wrap_SpinnerType_SetValue(SpinnerType *SpinnerTypePtr, SpinnerTypeT v);
extern SpinnerTypeT wrap_SpinnerType_GetValue(SpinnerType *self);
extern void wrap_Thickness_SetValue(Thickness *ThicknessPtr, float v);
extern float wrap_Thickness_GetValue(Thickness *self);

#ifdef __cplusplus
}
#endif
