// Code generated by cmd/codegen from https://github.com/AllenDang/cimgui-go.
// DO NOT EDIT.

#include "wrapper.h"
#include "../cwrappers/cimspinner.h"

void wrap_ImSpinner_Spinner3SmuggleDots(const char* label,float radius,float thickness) { ImSpinner_Spinner3SmuggleDots(label,radius,thickness,white,4.8f,8,0.5f,0); }
void wrap_ImSpinner_Spinner4Caleidospcope(const char* label,float radius,float thickness) { ImSpinner_Spinner4Caleidospcope(label,radius,thickness,0xffffffff,2.8f,8); }
void wrap_ImSpinner_SpinnerAng(const char* label,float radius,float thickness) { ImSpinner_SpinnerAng(label,radius,thickness,white,white,2.8f,3.14159265358979323846f,0); }
void wrap_ImSpinner_SpinnerAng8(const char* label,float radius,float thickness) { ImSpinner_SpinnerAng8(label,radius,thickness,white,white,2.8f,3.14159265358979323846f,0,0.5f); }
void wrap_ImSpinner_SpinnerAngEclipse(const char* label,float radius,float thickness) { ImSpinner_SpinnerAngEclipse(label,radius,thickness,white,2.8f,3.14159265358979323846f); }
void wrap_ImSpinner_SpinnerAngMix(const char* label,float radius,float thickness) { ImSpinner_SpinnerAngMix(label,radius,thickness,white,2.8f,3.14159265358979323846f,4,0); }
void wrap_ImSpinner_SpinnerAngTriple(const char* label,float radius1,float radius2,float radius3,float thickness) { ImSpinner_SpinnerAngTriple(label,radius1,radius2,radius3,thickness,white,half_white,white,2.8f,3.14159265358979323846f); }
void wrap_ImSpinner_SpinnerAngTwin(const char* label,float radius1,float radius2,float thickness) { ImSpinner_SpinnerAngTwin(label,radius1,radius2,thickness,white,half_white,2.8f,3.14159265358979323846f,1,0); }
void wrap_ImSpinner_SpinnerArcFade(const char* label,float radius,float thickness) { ImSpinner_SpinnerArcFade(label,radius,thickness,white,2.8f,4,0); }
void wrap_ImSpinner_SpinnerArcPolarFade(const char* label,float radius) { ImSpinner_SpinnerArcPolarFade(label,radius,white,2.8f,4,0); }
void wrap_ImSpinner_SpinnerArcPolarRadius(const char* label,float radius) { ImSpinner_SpinnerArcPolarRadius(label,radius,white,2.8f,4,0); }
void wrap_ImSpinner_SpinnerArcRotation(const char* label,float radius,float thickness) { ImSpinner_SpinnerArcRotation(label,radius,thickness,white,2.8f,4,0); }
void wrap_ImSpinner_SpinnerArcWedges(const char* label,float radius) { ImSpinner_SpinnerArcWedges(label,radius,red,2.8f,4,0); }
void wrap_ImSpinner_SpinnerAsciiSymbolPoints(const char* label,const char* text,float radius,float thickness) { ImSpinner_SpinnerAsciiSymbolPoints(label,text,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerAtom(const char* label,float radius,float thickness) { ImSpinner_SpinnerAtom(label,radius,thickness,white,2.8f,3); }
void wrap_ImSpinner_SpinnerBarChartAdvSine(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerBarChartAdvSine(label,radius,thickness,color,speed,0); }
void wrap_ImSpinner_SpinnerBarChartAdvSineFade(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerBarChartAdvSineFade(label,radius,thickness,color,speed,0); }
void wrap_ImSpinner_SpinnerBarChartRainbow(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerBarChartRainbow(label,radius,thickness,color,speed,5,0); }
void wrap_ImSpinner_SpinnerBarChartSine(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerBarChartSine(label,radius,thickness,color,speed,5,0); }
void wrap_ImSpinner_SpinnerBarsRotateFade(const char* label,float rmin,float rmax,float thickness) { ImSpinner_SpinnerBarsRotateFade(label,rmin,rmax,thickness,white,2.8f,6); }
void wrap_ImSpinner_SpinnerBarsScaleMiddle(const char* label,float w) { ImSpinner_SpinnerBarsScaleMiddle(label,w,white,2.8f,3); }
void wrap_ImSpinner_SpinnerBounceBall(const char* label,float radius,float thickness) { ImSpinner_SpinnerBounceBall(label,radius,thickness,white,2.8f,1,false); }
void wrap_ImSpinner_SpinnerBounceDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerBounceDots(label,radius,thickness,white,2.8f,3,0); }
void wrap_ImSpinner_SpinnerCaleidoscope(const char* label,float radius,float thickness) { ImSpinner_SpinnerCaleidoscope(label,radius,thickness,white,2.8f,6,0); }
void wrap_ImSpinner_SpinnerCamera(const char* label,float radius,float thickness,LeafColor* leaf_color) { ImSpinner_SpinnerCamera(label,radius,thickness,leaf_color,2.8f,8,0); }
void wrap_ImSpinner_SpinnerCircleDrop(const char* label,float radius,float thickness,float thickness_drop) { ImSpinner_SpinnerCircleDrop(label,radius,thickness,thickness_drop,white,half_white,2.8f,3.14159265358979323846f); }
void wrap_ImSpinner_SpinnerCircularLines(const char* label,float radius) { ImSpinner_SpinnerCircularLines(label,radius,white,1.8f,8,0); }
void wrap_ImSpinner_SpinnerCircularPoints(const char* label,float radius,float thickness) { ImSpinner_SpinnerCircularPoints(label,radius,thickness,white,1.8f,8); }
void wrap_ImSpinner_SpinnerClock(const char* label,float radius,float thickness) { ImSpinner_SpinnerClock(label,radius,thickness,white,half_white,2.8f); }
void wrap_ImSpinner_SpinnerCurvedCircle(const char* label,float radius,float thickness) { ImSpinner_SpinnerCurvedCircle(label,radius,thickness,white,2.8f,1); }
void wrap_ImSpinner_SpinnerDnaDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerDnaDots(label,radius,thickness,white,2.8f,8,0.5f,0); }
void wrap_ImSpinner_SpinnerDots(const char* label,float* nextdot,float radius,float thickness) { ImSpinner_SpinnerDots(label,nextdot,radius,thickness,white,2.8f,12,-1.f,0); }
void wrap_ImSpinner_SpinnerDotsToBar(const char* label,float radius,float thickness,float offset_k) { ImSpinner_SpinnerDotsToBar(label,radius,thickness,offset_k,white,2.8f,5); }
void wrap_ImSpinner_SpinnerDotsToPoints(const char* label,float radius,float thickness,float offset_k) { ImSpinner_SpinnerDotsToPoints(label,radius,thickness,offset_k,white,1.8f,5); }
void wrap_ImSpinner_SpinnerDoubleFadePulsar(const char* label,float radius,float noname1) { ImSpinner_SpinnerDoubleFadePulsar(label,radius,noname1,half_white,2.8f); }
void wrap_ImSpinner_SpinnerFadeBars(const char* label,float w) { ImSpinner_SpinnerFadeBars(label,w,white,2.8f,3,false); }
void wrap_ImSpinner_SpinnerFadeDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerFadeDots(label,radius,thickness,white,2.8f,8,0); }
void wrap_ImSpinner_SpinnerFadePulsar(const char* label,float radius) { ImSpinner_SpinnerFadePulsar(label,radius,white,2.8f,2,0); }
void wrap_ImSpinner_SpinnerFadePulsarSquare(const char* label,float radius) { ImSpinner_SpinnerFadePulsarSquare(label,radius,white,2.8f,2,0); }
void wrap_ImSpinner_SpinnerFadeTris(const char* label,float radius) { ImSpinner_SpinnerFadeTris(label,radius,white,2.8f,2,false,0); }
void wrap_ImSpinner_SpinnerFilledArcColor(const char* label,float radius) { ImSpinner_SpinnerFilledArcColor(label,radius,red,white,2.8f,4); }
void wrap_ImSpinner_SpinnerFilledArcFade(const char* label,float radius) { ImSpinner_SpinnerFilledArcFade(label,radius,white,2.8f,4,0); }
void wrap_ImSpinner_SpinnerFilledArcRing(const char* label,float radius,float thickness) { ImSpinner_SpinnerFilledArcRing(label,radius,thickness,red,white,2.8f,4); }
void wrap_ImSpinner_SpinnerFilling(const char* label,float radius,float thickness) { ImSpinner_SpinnerFilling(label,radius,thickness,white,red,2.8f); }
void wrap_ImSpinner_SpinnerFiveDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerFiveDots(label,radius,thickness,0xffffffff,2.8f,8); }
void wrap_ImSpinner_SpinnerFlowingGradient(const char* label,float radius,float thickness) { ImSpinner_SpinnerFlowingGradient(label,radius,thickness,white,red,2.8f,3.14159265358979323846f); }
void wrap_ImSpinner_SpinnerFluid(const char* label,float radius,const ImColor color,float speed) { ImSpinner_SpinnerFluid(label,radius,color,speed,3); }
void wrap_ImSpinner_SpinnerFluidPoints(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerFluidPoints(label,radius,thickness,color,speed,6,0.35f); }
void wrap_ImSpinner_SpinnerGalaxyDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerGalaxyDots(label,radius,thickness,white,2.8f,4); }
void wrap_ImSpinner_SpinnerGooeyBalls(const char* label,float radius,const ImColor color,float speed) { ImSpinner_SpinnerGooeyBalls(label,radius,color,speed,0); }
void wrap_ImSpinner_SpinnerHboDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerHboDots(label,radius,thickness,white,0.0f,0.f,1.1f,6,0); }
void wrap_ImSpinner_SpinnerIncDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerIncDots(label,radius,thickness,white,2.8f,6); }
void wrap_ImSpinner_SpinnerIncFullDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerIncFullDots(label,radius,thickness,white,2.8f,4); }
void wrap_ImSpinner_SpinnerIncScaleDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerIncScaleDots(label,radius,thickness,white,2.8f,6,0.f,0); }
void wrap_ImSpinner_SpinnerIngYang(const char* label,float radius,float thickness,bool reverse,float yang_detlta_r) { ImSpinner_SpinnerIngYang(label,radius,thickness,reverse,yang_detlta_r,white,white,2.8f,3.14159265358979323846f* 0.7f,0); }
void wrap_ImSpinner_SpinnerLemniscate(const char* label,float radius,float thickness) { ImSpinner_SpinnerLemniscate(label,radius,thickness,white,2.8f,3.14159265358979323846f / 2.0f); }
void wrap_ImSpinner_SpinnerLoadingRing(const char* label,float radius,float thickness) { ImSpinner_SpinnerLoadingRing(label,radius,thickness,white,half_white,2.8f,5); }
void wrap_ImSpinner_SpinnerModCircle(const char* label,float radius,float thickness) { ImSpinner_SpinnerModCircle(label,radius,thickness,white,1.f,1.f,2.8f); }
void wrap_ImSpinner_SpinnerMoonDots(const char* label,float radius,float thickness,const ImColor first,const ImColor second) { ImSpinner_SpinnerMoonDots(label,radius,thickness,first,second,1.1f); }
void wrap_ImSpinner_SpinnerMoonLine(const char* label,float radius,float thickness) { ImSpinner_SpinnerMoonLine(label,radius,thickness,white,red,2.8f,3.14159265358979323846f); }
void wrap_ImSpinner_SpinnerMovingArcs(const char* label,float radius,float thickness) { ImSpinner_SpinnerMovingArcs(label,radius,thickness,white,2.8f,4); }
void wrap_ImSpinner_SpinnerMovingDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerMovingDots(label,radius,thickness,white,2.8f,3); }
void wrap_ImSpinner_SpinnerMultiFadeDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerMultiFadeDots(label,radius,thickness,white,2.8f,8); }
void wrap_ImSpinner_SpinnerOrionDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerOrionDots(label,radius,thickness,white,2.8f,4); }
void wrap_ImSpinner_SpinnerPatternEclipse(const char* label,float radius,float thickness) { ImSpinner_SpinnerPatternEclipse(label,radius,thickness,white,2.8f,3,2.f,0.f); }
void wrap_ImSpinner_SpinnerPatternRings(const char* label,float radius,float thickness) { ImSpinner_SpinnerPatternRings(label,radius,thickness,white,2.8f,3); }
void wrap_ImSpinner_SpinnerPatternSphere(const char* label,float radius,float thickness) { ImSpinner_SpinnerPatternSphere(label,radius,thickness,white,2.8f,3); }
void wrap_ImSpinner_SpinnerPointsArcBounce(const char* label,float radius,float thickness) { ImSpinner_SpinnerPointsArcBounce(label,radius,thickness,white,2.8f,4,2,0.f); }
void wrap_ImSpinner_SpinnerPointsRoller(const char* label,float radius,float thickness) { ImSpinner_SpinnerPointsRoller(label,radius,thickness,white,2.8f,8,2,1.f); }
void wrap_ImSpinner_SpinnerPointsShift(const char* label,float radius,float thickness) { ImSpinner_SpinnerPointsShift(label,radius,thickness,white,half_white,2.8f,8); }
void wrap_ImSpinner_SpinnerPulsar(const char* label,float radius,float thickness) { ImSpinner_SpinnerPulsar(label,radius,thickness,half_white,2.8f,true,0.f,0); }
void wrap_ImSpinner_SpinnerPulsarBall(const char* label,float radius,float thickness) { ImSpinner_SpinnerPulsarBall(label,radius,thickness,white,2.8f,false,0); }
void wrap_ImSpinner_SpinnerRainbow(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerRainbow(label,radius,thickness,color,speed,0.f,PI_2,1,0); }
void wrap_ImSpinner_SpinnerRainbowBalls(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerRainbowBalls(label,radius,thickness,color,speed,5,0); }
void wrap_ImSpinner_SpinnerRainbowCircle(const char* label,float radius,float thickness) { ImSpinner_SpinnerRainbowCircle(label,radius,thickness,white,2.8f,4,1); }
void wrap_ImSpinner_SpinnerRainbowMix(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerRainbowMix(label,radius,thickness,color,speed,0.f,PI_2,1,0); }
void wrap_ImSpinner_SpinnerRainbowShot(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerRainbowShot(label,radius,thickness,color,speed,5); }
void wrap_ImSpinner_SpinnerRingSynchronous(const char* label,float radius,float thickness) { ImSpinner_SpinnerRingSynchronous(label,radius,thickness,white,2.8f,3); }
void wrap_ImSpinner_SpinnerRingWatermarks(const char* label,float radius,float thickness) { ImSpinner_SpinnerRingWatermarks(label,radius,thickness,white,2.8f,3); }
void wrap_ImSpinner_SpinnerRotateDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerRotateDots(label,radius,thickness,white,2.8f,2,0); }
void wrap_ImSpinner_SpinnerRotateGear(const char* label,float radius,float thickness) { ImSpinner_SpinnerRotateGear(label,radius,thickness,white,2.8f,12); }
void wrap_ImSpinner_SpinnerRotateGooeyBalls(const char* label,float radius,float thickness,const ImColor color,float speed,int balls) { ImSpinner_SpinnerRotateGooeyBalls(label,radius,thickness,color,speed,balls,0); }
void wrap_ImSpinner_SpinnerRotateSegments(const char* label,float radius,float thickness) { ImSpinner_SpinnerRotateSegments(label,radius,thickness,white,2.8f,4,1,0); }
void wrap_ImSpinner_SpinnerRotateSegmentsPulsar(const char* label,float radius,float thickness) { ImSpinner_SpinnerRotateSegmentsPulsar(label,radius,thickness,white,2.8f,4,1); }
void wrap_ImSpinner_SpinnerRotateTriangles(const char* label,float radius,float thickness,const ImColor color,float speed,int tris) { ImSpinner_SpinnerRotateTriangles(label,radius,thickness,color,speed,tris,0); }
void wrap_ImSpinner_SpinnerRotateWheel(const char* label,float radius,float thickness) { ImSpinner_SpinnerRotateWheel(label,radius,thickness,white,white,2.8f,12); }
void wrap_ImSpinner_SpinnerRotatedAtom(const char* label,float radius,float thickness) { ImSpinner_SpinnerRotatedAtom(label,radius,thickness,white,2.8f,3,0); }
void wrap_ImSpinner_SpinnerRotatingHeart(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerRotatingHeart(label,radius,thickness,color,speed,0.f); }
void wrap_ImSpinner_SpinnerScaleBlocks(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerScaleBlocks(label,radius,thickness,color,speed,0); }
void wrap_ImSpinner_SpinnerScaleDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerScaleDots(label,radius,thickness,white,2.8f,8); }
void wrap_ImSpinner_SpinnerSevenSegments(const char* label,const char* text,float radius,float thickness) { ImSpinner_SpinnerSevenSegments(label,text,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSimpleArcFade(const char* label,float radius,float thickness) { ImSpinner_SpinnerSimpleArcFade(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSinSquares(const char* label,float radius,float thickness,const ImColor color,float speed) { ImSpinner_SpinnerSinSquares(label,radius,thickness,color,speed,0); }
void wrap_ImSpinner_SpinnerSineArcs(const char* label,float radius,float thickness) { ImSpinner_SpinnerSineArcs(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSolarArcs(const char* label,float radius,float thickness) { ImSpinner_SpinnerSolarArcs(label,radius,thickness,white,half_white,2.8f,4); }
void wrap_ImSpinner_SpinnerSolarBalls(const char* label,float radius,float thickness) { ImSpinner_SpinnerSolarBalls(label,radius,thickness,white,half_white,2.8f,4); }
void wrap_ImSpinner_SpinnerSolarScaleBalls(const char* label,float radius,float thickness) { ImSpinner_SpinnerSolarScaleBalls(label,radius,thickness,white,2.8f,4); }
void wrap_ImSpinner_SpinnerSomeScaleDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerSomeScaleDots(label,radius,thickness,white,2.8f,6,0); }
void wrap_ImSpinner_SpinnerSpiral(const char* label,float radius,float thickness) { ImSpinner_SpinnerSpiral(label,radius,thickness,white,2.8f,4); }
void wrap_ImSpinner_SpinnerSpiralEye(const char* label,float radius,float thickness) { ImSpinner_SpinnerSpiralEye(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSplineAng(const char* label,float radius,float thickness) { ImSpinner_SpinnerSplineAng(label,radius,thickness,white,white,2.8f,3.14159265358979323846f,0); }
void wrap_ImSpinner_SpinnerSquareLoading(const char* label,float radius,float thickness) { ImSpinner_SpinnerSquareLoading(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSquareSpins(const char* label,float radius,float thickness) { ImSpinner_SpinnerSquareSpins(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSquareStrokeFade(const char* label,float radius,float thickness) { ImSpinner_SpinnerSquareStrokeFade(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSquareStrokeFill(const char* label,float radius,float thickness) { ImSpinner_SpinnerSquareStrokeFill(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSquareStrokeLoading(const char* label,float radius,float thickness) { ImSpinner_SpinnerSquareStrokeLoading(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerSurroundedIndicator(const char* label,float radius,float thickness) { ImSpinner_SpinnerSurroundedIndicator(label,radius,thickness,white,half_white,2.8f); }
void wrap_ImSpinner_SpinnerSwingDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerSwingDots(label,radius,thickness,white,2.8f); }
void wrap_ImSpinner_SpinnerTextFading(const char* label,const char* text,float radius,float fsize) { ImSpinner_SpinnerTextFading(label,text,radius,fsize,white,2.8f); }
void wrap_ImSpinner_SpinnerThickToSin(const char* label,float radius,float thickness) { ImSpinner_SpinnerThickToSin(label,radius,thickness,white,2.8f,8,0); }
void wrap_ImSpinner_SpinnerThreeDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerThreeDots(label,radius,thickness,white,2.8f,8); }
void wrap_ImSpinner_SpinnerThreeDotsStar(const char* label,float radius,float thickness) { ImSpinner_SpinnerThreeDotsStar(label,radius,thickness,white,0.0f,0.f,1.1f,0.f); }
void wrap_ImSpinner_SpinnerTopup(const char* label,float radius1,float radius2) { ImSpinner_SpinnerTopup(label,radius1,radius2,red,white,white,2.8f); }
void wrap_ImSpinner_SpinnerTrianglesSelector(const char* label,float radius,float thickness) { ImSpinner_SpinnerTrianglesSelector(label,radius,thickness,white,half_white,2.8f,8); }
void wrap_ImSpinner_SpinnerTrianglesShift(const char* label,float radius,float thickness) { ImSpinner_SpinnerTrianglesShift(label,radius,thickness,white,half_white,2.8f,8); }
void wrap_ImSpinner_SpinnerTwinAng(const char* label,float radius1,float radius2,float thickness) { ImSpinner_SpinnerTwinAng(label,radius1,radius2,thickness,white,red,2.8f,3.14159265358979323846f,0); }
void wrap_ImSpinner_SpinnerTwinAng180(const char* label,float radius1,float radius2,float thickness) { ImSpinner_SpinnerTwinAng180(label,radius1,radius2,thickness,white,red,2.8f,PI_DIV_4,0); }
void wrap_ImSpinner_SpinnerTwinAng360(const char* label,float radius1,float radius2,float thickness) { ImSpinner_SpinnerTwinAng360(label,radius1,radius2,thickness,white,red,2.8f,2.5f,0); }
void wrap_ImSpinner_SpinnerTwinBall(const char* label,float radius1,float radius2,float thickness,float b_thickness) { ImSpinner_SpinnerTwinBall(label,radius1,radius2,thickness,b_thickness,white,half_white,2.8f,2,0); }
void wrap_ImSpinner_SpinnerTwinHboDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerTwinHboDots(label,radius,thickness,white,0.0f,0.f,1.1f,6,0.f); }
void wrap_ImSpinner_SpinnerTwinPulsar(const char* label,float radius,float thickness) { ImSpinner_SpinnerTwinPulsar(label,radius,thickness,white,2.8f,2,0); }
void wrap_ImSpinner_SpinnerVDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerVDots(label,radius,thickness,white,white,2.8f,12,6,0); }
void wrap_ImSpinner_SpinnerWaveDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerWaveDots(label,radius,thickness,white,2.8f,8); }
void wrap_ImSpinner_SpinnerWifiIndicator(const char* label,float radius,float thickness) { ImSpinner_SpinnerWifiIndicator(label,radius,thickness,red,half_white,2.8f,0.f,3); }
void wrap_ImSpinner_SpinnerZipDots(const char* label,float radius,float thickness) { ImSpinner_SpinnerZipDots(label,radius,thickness,white,2.8f,5); }
float wrap_ImSpinner_damped_spring(float mass,float stiffness,float damping,float time) { return ImSpinner_damped_spring(mass,stiffness,damping,time,PI_DIV_2,PI_DIV_2); }
float wrap_ImSpinner_damped_trifolium(float limtime) { return ImSpinner_damped_trifolium(limtime,0.f,1.f); }
